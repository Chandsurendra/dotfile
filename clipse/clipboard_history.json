{"clipboardHistory":[{"value":"# Check if an image was selected\nif [ -z \"$selected_image\" ]; then\n    echo \"No wallpaper selected.\"\n    exit 0\nfi\n","recorded":"2024-10-28 12:36:41.540777207","filePath":"null","pinned":false},{"value":"if [ -z \"$selected_image\" ]; then\n    echo \"No wallpaper selected.\"\n    exit 0\nfi","recorded":"2024-10-28 12:35:54.564039995","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Define directories where images are located\ndirectories=(\"/home/react/.config/hypr/background\" \"/home/react/test\")\n\n# Use fzf to select an image with full path as output\nselected_image=$(find \"${directories[@]}\" -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) | fzf --preview 'fzfimg {}')\n\n# Write additional info along with the selected image path to a file\n{\n    echo \"#Wallpaper set on: $(date)\"\n    echo \"#Selected image: $selected_image\"\n    echo \"#Set using Hyprpaper\"\n    echo \"preload = $selected_image\"\n    echo \"wallpaper = LVDS-1, contain:$selected_image\"\n    echo \"ipc = off\"\n} \u003e ~/.config/hypr/hyprpaper.conf\n\n# Check if hyprpaper is running\nif pgrep -x \"hyprpaper\" \u003e /dev/null; then\n    # If running, kill it\n    echo \"hyprpaper is running, restarting...\"\n    pkill -x \"hyprpaper\"\nelse\n    echo \"Starting hyprpaper...\"\nfi\n\n# Start hyprpaper with the selected image\nnohup hyprpaper \u0026\u003e /dev/null \u0026\n","recorded":"2024-10-28 12:19:18.769885895","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Define directories where images are located\ndirectories=(\"/home/react/.config/hypr/background\" \"/home/react/test\")\n\n# Use fzf to select an image with full path as output\nselected_image=$(find \"${directories[@]}\" -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) | fzf --preview 'fzfimg {}')\n\n\n #Write additional info along with the selected image path to a file\n{\n    echo \"#Wallpaper set on: $(date)\"\n    echo \"#Selected image: $selected_image\"\n    echo \"#Set using Hyprpaper\"\n    echo \"preload = $selected_image\"\n    echo \"wallpaper = LVDS-1, contain:$selected_image\"\n    echo \"ipc = off\"\n} \u003e ~/.config/hypr/hyprpaper.conf\n\n# Check if hyprpaper is running\nif pgrep -x \"hyprpaper\" \u003e /dev/null; then\n    # If running, kill it\n    echo \"hyprpaper running\" \u0026\n    pkill -x \"hyprpaper\"\n    #reopen\n    hyprpaper \u0026 \u003e\u003e/dev/null \u0026\nelse\n# Start hyprpaper with the selected image\necho \"hyprpaper not running\" \u0026\nhyprpaper \u0026 \u003e\u003e/dev/null \u0026\nfi\n","recorded":"2024-10-28 12:18:11.329298203","filePath":"null","pinned":false},{"value":"#","recorded":"2024-10-28 12:16:02.985722036","filePath":"null","pinned":false},{"value":"#full_path=$(find \"${directories[@]}\" -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) | grep -F \"$selected_image\")\n","recorded":"2024-10-28 12:15:39.932850994","filePath":"null","pinned":false},{"value":"# Retrieve the full path from `find` using a filter\n","recorded":"2024-10-28 12:15:39.586717755","filePath":"null","pinned":false},{"value":"\n","recorded":"2024-10-28 12:15:39.282127950","filePath":"null","pinned":false},{"value":"#[ -z \"$selected_image\" ] \u0026\u0026 exit\n","recorded":"2024-10-28 12:15:38.932993049","filePath":"null","pinned":false},{"value":"# Exit if no image is selected\n","recorded":"2024-10-28 12:15:38.602361142","filePath":"null","pinned":false},{"value":"#    | awk '{if (length($0) \u003e 50) print \"...\" substr($0, length($0)-47); else print $0}' \\\n","recorded":"2024-10-28 12:15:37.603703260","filePath":"null","pinned":false},{"value":"e","recorded":"2024-10-28 11:49:53.098398168","filePath":"null","pinned":false},{"value":"\n# #######################################################################################\n# AUTOGENERATED HYPR CONFIG.\n# PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,\n# OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.\n# #######################################################################################\n\n#autogenerated = 1 # remove this line to remove the warning\n\n# This is an example Hyprland config file.\n# Refer to the wiki for more information.\n# https://wiki.hyprland.org/Configuring/Configuring-Hyprland/\n\n# Please note not all available settings / options are set here.\n# For a full list, see the wiki\n\n# You can split this configuration into multiple files\n# Create your files separately and then link them to this file like this:\nsource = ~/.config/hypr/mocha.conf\nsource = ~/.config/hypr/wirule.conf\nsource = ~/.config/hypr/env.conf\nsource = ~/.config/hypr/keybinds.conf\nsource = ~/.config/hypr/autorun.conf\n################\n### MONITORS ###\n################\n\n# See https://wiki.hyprland.org/Configuring/Monitors/\nmonitor=,preferred,auto,auto\n\n\n###################\n### MY PROGRAMS ###\n###################\n\n# See https://wiki.hyprland.org/Configuring/Keywords/\n\n# Set programs that you use\n$terminal = kitty\n$fileManager = yazi\n$menu = wofi --show drun -I\n\n\n\n#####################\n### LOOK AND FEEL ###\n#####################\n\n# Refer to https://wiki.hyprland.org/Configuring/Variables/\n\n# https://wiki.hyprland.org/Configuring/Variables/#general\ngeneral {\n    gaps_in = 4\n    gaps_out = 8\n\n    border_size = 2\n\n    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors\n    col.active_border = $mauve $flamingo 45deg\n    col.inactive_border = $subtext0\n\n    # Set to true enable resizing windows by clicking and dragging on borders and gaps\n    resize_on_border = false\n\n    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on\n    allow_tearing = false\n\n    layout = dwindle\n}\n\n# https://wiki.hyprland.org/Configuring/Variables/#decoration\ndecoration {\n    rounding = 4\n\n}\n\n# https://wiki.hyprland.org/Configuring/Variables/#animations\nanimations {\n    enabled = false\n\n    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more\n\n    bezier = myBezier, 0.05, 0.9, 0.1, 1.05\n\n    animation = windows, 1, 7, myBezier\n    animation = windowsOut, 1, 7, default, popin 80%\n    animation = border, 1, 10, default\n    animation = borderangle, 1, 8, default\n    animation = fade, 1, 7, default\n    animation = workspaces, 1, 6, default\n}\n\n# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more\ndwindle {\n    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below\n    preserve_split = true # You probably want this\n}\n\n# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more\nmaster {\n    new_status = master\n}\n\n# https://wiki.hyprland.org/Configuring/Variables/#misc\nmisc {\n    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers\n    disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(\n}\n\n\n#############\n### INPUT ###\n#############\n\n# https://wiki.hyprland.org/Configuring/Variables/#input\ninput {\n    kb_layout = us\n    kb_variant =\n    kb_model =\n    kb_options =\n    kb_rules =\n\n    follow_mouse = 1\n\n    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.\n\n    touchpad {\n        natural_scroll = false\n    }\n}\n\n# https://wiki.hyprland.org/Configuring/Variables/#gestures\ngestures {\n    workspace_swipe = false\n}\n\n# Example per-device config\n# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more\ndevice {\n    name = epic-mouse-v1\n    sensitivity = -0.5\n}\n\n\n###################\n### KEYBINDINGS ###\n###################\n\n# See https://wiki.hyprland.org/Configuring/Keywords/\n$mainMod = SUPER # Sets \"Windows\" key as main modifier\n\n# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more\nbind = $mainMod, Q, exec, $terminal\nbind = $mainMod, C, killactive,\nbind = $mainMod, M, exec, ~/.config/hypr/scripts/power\n#bind = $mainMod, M, exit\nbind = $mainMod, E, exec, $fileManager\nbind = $mainMod, V, togglefloating,\nbind = $mainMod, R, exec, $menu\nbind = $mainMod, P, pseudo, # dwindle\nbind = $mainMod, J, togglesplit, # dwindle\nbind = $mainMod, n, exec, netctl restart usb0\n\n\n\n# Move focus with mainMod + arrow keys\nbind = $mainMod, left, movefocus, l\nbind = $mainMod, right, movefocus, r\nbind = $mainMod, up, movefocus, u\nbind = $mainMod, down, movefocus, d\n\n# Switch workspaces with mainMod + [0-9]\nbind = $mainMod, 1, workspace, 1\nbind = $mainMod, 2, workspace, 2\nbind = $mainMod, 3, workspace, 3\nbind = $mainMod, 4, workspace, 4\nbind = $mainMod, 5, workspace, 5\nbind = $mainMod, 6, workspace, 6\nbind = $mainMod, 7, workspace, 7\nbind = $mainMod, 8, workspace, 8\nbind = $mainMod, 9, workspace, 9\nbind = $mainMod, 0, workspace, 10\n\n# Move active window to a workspace with mainMod + SHIFT + [0-9]\nbind = $mainMod SHIFT, 1, movetoworkspace, 1\nbind = $mainMod SHIFT, 2, movetoworkspace, 2\nbind = $mainMod SHIFT, 3, movetoworkspace, 3\nbind = $mainMod SHIFT, 4, movetoworkspace, 4\nbind = $mainMod SHIFT, 5, movetoworkspace, 5\nbind = $mainMod SHIFT, 6, movetoworkspace, 6\nbind = $mainMod SHIFT, 7, movetoworkspace, 7\nbind = $mainMod SHIFT, 8, movetoworkspace, 8\nbind = $mainMod SHIFT, 9, movetoworkspace, 9\nbind = $mainMod SHIFT, 0, movetoworkspace, 10\n\n# Example special workspace (scratchpad)\nbind = $mainMod, S, togglespecialworkspace, magic\nbind = $mainMod SHIFT, S, movetoworkspace, special:magic\n\n# Scroll through existing workspaces with mainMod + scroll\nbind = $mainMod, mouse_down, workspace, e+1\nbind = $mainMod, mouse_up, workspace, e-1\n\n# Move/resize windows with mainMod + LMB/RMB and dragging\nbindm = $mainMod, mouse:272, movewindow\nbindm = $mainMod, mouse:273, resizewindow\n\n# Laptop multimedia keys for volume and LCD brightness\nbindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1.0\nbindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-\nbindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle\nbindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle\nbindel = ,XF86MonBrightnessUp, exec, ~/.config/hypr/scripts/backlight --inc\nbindel = ,XF86MonBrightnessDown, exec, ~/.config/hypr/scripts/backlight --dec\n\n# Requires playerctl\nbindl = , XF86AudioNext, exec, playerctl next\nbindl = , XF86AudioPause, exec, playerctl play-pause\nbindl = , XF86AudioPlay, exec, playerctl play-pause\nbindl = , XF86AudioPrev, exec, playerctl previous\n\n","recorded":"2024-10-28 11:44:30.331354904","filePath":"null","pinned":false},{"value":"#-b \"$full_path\" \u0026\n","recorded":"2024-10-28 11:34:16.964253684","filePath":"null","pinned":false},{"value":"echo done\n","recorded":"2024-10-28 11:34:16.625301134","filePath":"null","pinned":false},{"value":"    }\n","recorded":"2024-10-28 11:27:40.827430324","filePath":"null","pinned":false},{"value":"        vibrancy = 0.1696\n","recorded":"2024-10-28 11:27:40.028644708","filePath":"null","pinned":false},{"value":"        passes = 1\n","recorded":"2024-10-28 11:27:39.013421273","filePath":"null","pinned":false},{"value":"        size = 1\n","recorded":"2024-10-28 11:27:38.627065159","filePath":"null","pinned":false},{"value":"        enabled = false\n","recorded":"2024-10-28 11:27:38.267224965","filePath":"null","pinned":false},{"value":"    blur {\n","recorded":"2024-10-28 11:27:37.901625387","filePath":"null","pinned":false},{"value":"    # https://wiki.hyprland.org/Configuring/Variables/#blur\n","recorded":"2024-10-28 11:27:37.545908229","filePath":"null","pinned":false},{"value":"    col.shadow = rgba(1a1a1aee)\n","recorded":"2024-10-28 11:27:36.827983515","filePath":"null","pinned":false},{"value":"    shadow_render_power = 1\n","recorded":"2024-10-28 11:27:36.472880033","filePath":"null","pinned":false},{"value":"    shadow_range = 1\n","recorded":"2024-10-28 11:27:36.118290877","filePath":"null","pinned":false},{"value":"    drop_shadow = false\n","recorded":"2024-10-28 11:27:35.754337795","filePath":"null","pinned":false},{"value":"    inactive_opacity = 0.9\n","recorded":"2024-10-28 11:27:34.917633397","filePath":"null","pinned":false},{"value":"    active_opacity = 0.95\n","recorded":"2024-10-28 11:27:34.450691884","filePath":"null","pinned":false},{"value":"    # Change transparency of focused and unfocused windows\n","recorded":"2024-10-28 11:27:34.046011674","filePath":"null","pinned":false},{"value":"a","recorded":"2024-10-28 11:08:04.024070570","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Define directories where images are located\ndirectories=(\"path/to/folder1\" \"path/to/folder2\")\n\n# Use fzf to select an image with truncated display but full path as output\nselected_image=$(find \"${directories[@]}\" -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) \\\n    | awk '{if (length($0) \u003e 50) print \"...\" substr($0, length($0)-47); else print $0}' \\\n    | fzf --preview 'kitty +kitten icat {1}')\n\n# Exit if no image is selected\n[ -z \"$selected_image\" ] \u0026\u0026 exit\n\n# Retrieve the full path from `find` using a filter\nfull_path=$(find \"${directories[@]}\" -type f \\( -iname '*.jpg' -o -iname '*.png' -o -iname '*.jpeg' \\) | grep -F \"$selected_image\")\n\n# Write additional info along with the selected image path to a file\n{\n    echo \"Wallpaper set on: $(date)\"\n    echo \"Selected image: $full_path\"\n    echo \"Set using Hyprpaper\"\n} \u003e ~/selected_wallpaper_info.txt\n\n# Check if hyprpaper is running\nif pgrep -x \"hyprpaper\" \u003e /dev/null; then\n    # If running, kill it\n    pkill hyprpaper\nfi\n\n# Start hyprpaper with the selected image\nhyprpaper -b \"$full_path\" \u0026\n","recorded":"2024-10-28 10:55:13.889389185","filePath":"null","pinned":false},{"value":"bind = CONTROL, r, exec, kitty -e ranger","recorded":"2024-10-27 22:08:41.498762002","filePath":"null","pinned":false},{"value":"bind = CONTROL, w, exec,kitty -e  ~/.config/hypr/scripts/set-wall","recorded":"2024-10-27 22:03:44.027614521","filePath":"null","pinned":false},{"value":"env = HYPRCURSOR_SIZE,24\n","recorded":"2024-10-27 21:59:27.346995519","filePath":"null","pinned":false},{"value":"env = XCURSOR_SIZE,24\n","recorded":"2024-10-27 21:59:26.944090648","filePath":"null","pinned":false},{"value":"# See https://wiki.hyprland.org/Configuring/Environment-variables/\n","recorded":"2024-10-27 21:59:26.094190203","filePath":"null","pinned":false},{"value":"#############################\n","recorded":"2024-10-27 21:59:25.633171140","filePath":"null","pinned":false},{"value":"### ENVIRONMENT VARIABLES ###\n","recorded":"2024-10-27 21:59:25.556225291","filePath":"null","pinned":false},{"value":"exec-once = clipse -listen # run listener on startup\n","recorded":"2024-10-27 21:59:23.635543235","filePath":"null","pinned":false},{"value":"#exec-once = ~/.config/hypr/scripts/swww-random ~/.config/hypr/background\n","recorded":"2024-10-27 21:59:23.552259912","filePath":"null","pinned":false},{"value":"exec-once = wl-paste --type image --watch cliphist store # Stores only image data\n","recorded":"2024-10-27 21:59:23.472843344","filePath":"null","pinned":false},{"value":"exec-once = wl-paste --type text --watch cliphist store # Stores only text data\n","recorded":"2024-10-27 21:59:23.389850136","filePath":"null","pinned":false},{"value":"exec-once = hyrpaper\n","recorded":"2024-10-27 21:59:23.231246095","filePath":"null","pinned":false},{"value":"#exec-once = swww img /usr/share/backgrounds/end-4.png \n","recorded":"2024-10-27 21:59:23.153486345","filePath":"null","pinned":false},{"value":"#exec-once = swww-daemon\n","recorded":"2024-10-27 21:59:23.069011039","filePath":"null","pinned":false},{"value":"exec-once = hypridle\n","recorded":"2024-10-27 21:59:22.986875583","filePath":"null","pinned":false},{"value":"exec-once = lxpolkit\n","recorded":"2024-10-27 21:59:22.908350340","filePath":"null","pinned":false},{"value":"# exec-once = waybar \u0026 hyprpaper \u0026 firefox\n","recorded":"2024-10-27 21:59:22.827672771","filePath":"null","pinned":false},{"value":"# exec-once = nm-applet \u0026\n","recorded":"2024-10-27 21:59:22.749687849","filePath":"null","pinned":false},{"value":"# exec-once = $terminal\n","recorded":"2024-10-27 21:59:22.670732092","filePath":"null","pinned":false},{"value":"# Or execute your favorite apps at launch like this:\n","recorded":"2024-10-27 21:59:21.027335498","filePath":"null","pinned":false},{"value":"# Autostart necessary processes (like notifications daemons, status bars, etc.)\n","recorded":"2024-10-27 21:59:20.942685838","filePath":"null","pinned":false},{"value":"#################\n","recorded":"2024-10-27 21:59:20.782098301","filePath":"null","pinned":false},{"value":"### AUTOSTART ###\n","recorded":"2024-10-27 21:59:20.715277861","filePath":"null","pinned":false},{"value":"#################\n### AUTOSTART ###\n#################\n\n# Autostart necessary processes (like notifications daemons, status bars, etc.)\n# Or execute your favorite apps at launch like this:\n\n# exec-once = $terminal\n# exec-once = nm-applet \u0026\n# exec-once = waybar \u0026 hyprpaper \u0026 firefox\nexec-once = lxpolkit\nexec-once = hypridle\n#exec-once = swww-daemon\n#exec-once = swww img /usr/share/backgrounds/end-4.png\nexec-once = hyrpaper\n\nexec-once = wl-paste --type text --watch cliphist store # Stores only text data\nexec-once = wl-paste --type image --watch cliphist store # Stores only image data\n#exec-once = ~/.config/hypr/scripts/swww-random ~/.config/hypr/background\nexec-once = clipse -listen # run listener on startup\n","recorded":"2024-10-27 21:57:46.136258999","filePath":"null","pinned":false},{"value":"#############################\n### ENVIRONMENT VARIABLES ###\n#############################\n\n# See https://wiki.hyprland.org/Configuring/Environment-variables/\n\nenv = XCURSOR_SIZE,24\nenv = HYPRCURSOR_SIZE,24\n\n","recorded":"2024-10-27 21:56:56.912156794","filePath":"null","pinned":false},{"value":"##############################\n","recorded":"2024-10-27 21:53:47.333265185","filePath":"null","pinned":false},{"value":"### WINDOWS AND WORKSPACES ###\n","recorded":"2024-10-27 21:49:55.439247720","filePath":"null","pinned":false},{"value":"# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more\n","recorded":"2024-10-27 21:49:54.205075930","filePath":"null","pinned":false},{"value":"# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules\n","recorded":"2024-10-27 21:49:53.916004565","filePath":"null","pinned":false},{"value":"# Example windowrule v1\n","recorded":"2024-10-27 21:49:53.755886574","filePath":"null","pinned":false},{"value":"# windowrule = float, ^(kitty)$\n","recorded":"2024-10-27 21:49:53.676886628","filePath":"null","pinned":false},{"value":"# Example windowrule v2\n","recorded":"2024-10-27 21:49:53.515574062","filePath":"null","pinned":false},{"value":"# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$\n","recorded":"2024-10-27 21:49:53.432848642","filePath":"null","pinned":false},{"value":"# windowrule = opacity,1,Chromium,\n","recorded":"2024-10-27 21:49:53.353879981","filePath":"null","pinned":false},{"value":"# Ignore maximize requests from apps. You'll probably like this.\n","recorded":"2024-10-27 21:49:53.195226373","filePath":"null","pinned":false},{"value":"windowrulev2 = suppressevent maximize, class:.*\n","recorded":"2024-10-27 21:49:53.109959162","filePath":"null","pinned":false},{"value":"# Fix some dragging issues with XWayland\n","recorded":"2024-10-27 21:49:52.950303134","filePath":"null","pinned":false},{"value":"windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0\n","recorded":"2024-10-27 21:49:52.866594584","filePath":"null","pinned":false},{"value":"#bind = CONTROL, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy\n","recorded":"2024-10-27 21:49:52.625050261","filePath":"null","pinned":false},{"value":"windowrulev2 = float,class:(clipse) # ensure you have a floating window class set if you want this behavior\n","recorded":"2024-10-27 21:49:52.464998278","filePath":"null","pinned":false},{"value":"windowrulev2 = size 622 652,class:(clipse) # set the size of the window as necessary\n","recorded":"2024-10-27 21:49:52.388777034","filePath":"null","pinned":false},{"value":"#bind = CONTROL, V, exec,  kitty --class clipse -e 'clipse' \n","recorded":"2024-10-27 21:49:52.226922564","filePath":"null","pinned":false},{"value":"#test\n","recorded":"2024-10-27 21:49:52.151709679","filePath":"null","pinned":false},{"value":"windowrulev2 = float,class:(test) # ensure you have a floating window class set if you want this behavior\n","recorded":"2024-10-27 21:49:51.983571508","filePath":"null","pinned":false},{"value":"windowrulev2 = size 1080 720,class:(test) # set the size of the window as necessary\n","recorded":"2024-10-27 21:49:51.903947944","filePath":"null","pinned":false},{"value":"bindl = , XF86AudioPrev, exec, playerctl previous\n","recorded":"2024-10-27 21:49:21.318749129","filePath":"null","pinned":false},{"value":"#bind = CONTROL, V, exec,  kitty --class clipse -e 'clipse'\n#test\n\nwindowrulev2 = float,class:(test) # ensure you have a floating window class set if you want this behavior\nwindowrulev2 = size 1080 720,class:(test) # set the size of the window as necessary\n\n","recorded":"2024-10-27 21:47:52.243044426","filePath":"null","pinned":false},{"value":"##############################\n### WINDOWS AND WORKSPACES ###\n##############################\n\n# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more\n# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules\n\n# Example windowrule v1\n# windowrule = float, ^(kitty)$\n\n# Example windowrule v2\n# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$\n# windowrule = opacity,1,Chromium,\n\n# Ignore maximize requests from apps. You'll probably like this.\nwindowrulev2 = suppressevent maximize, class:.*\n\n# Fix some dragging issues with XWayland\nwindowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0\n\n\n#bind = CONTROL, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy\n\nwindowrulev2 = float,class:(clipse) # ensure you have a floating window class set if you want this behavior\nwindowrulev2 = size 622 652,class:(clipse) # set the size of the window as necessary","recorded":"2024-10-27 21:47:29.353447551","filePath":"null","pinned":false},{"value":"wallpaper=$(find / -type f \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.bmp\" -o -iname \"*.tiff\" -o -iname \"*.webp\" \\) 2\u003e/dev/null | fzf)\n[ -n \"$wallpaper\" ] \u0026\u0026 hyprctl hyprpaper wallpaper eDP-1,$wallpaper\n","recorded":"2024-10-27 21:34:24.108653444","filePath":"null","pinned":false},{"value":"git clone https://github.com/NvChad/starter ~/.config/nvim \u0026\u0026 nvim","recorded":"2024-10-27 21:13:33.690470339","filePath":"null","pinned":false},{"value":"# Set the directory to search in\nsearch_directory=\"/path/to/your/directory\"\n\n# Find the wallpaper file\nwallpaper=$(\n    find \"$search_directory\" -type f \\\n        \\( -iname \"*.jpg\" -o \\\n           -iname \"*.jpeg\" -o \\\n           -iname \"*.png\" -o \\\n           -iname \"*.gif\" -o \\\n           -iname \"*.bmp\" -o \\\n           -iname \"*.tiff\" -o \\\n           -iname \"*.webp\" \\) 2\u003e/dev/null | fzf\n)\n\n# Check if a wallpaper was selected\nif [ -n \"$wallpaper\" ]; then\n    hyprctl hyprpaper wallpaper,\"$wallpaper\"\nelse\n    echo \"No wallpaper selected.\"\nfi\n","recorded":"2024-10-27 21:11:23.363037160","filePath":"null","pinned":false},{"value":"if [[ -z \"$SELECTED_WALLPAPER\" ]]; then\n  exit 0\nfi","recorded":"2024-10-27 20:59:35.333582341","filePath":"null","pinned":false},{"value":"if [[ ! -d \"$WALLPAPER_DIR\" ]]; then\n  echo \"Wallpaper directory does not exist.\"\n  exit 1\nfi","recorded":"2024-10-27 20:58:02.240538225","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Launch Kitty terminal to run the wallpaper setting command\n\n# Find image files\nwallpaper=$(find / -type f \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.bmp\" -o -iname \"*.tiff\" \\))\n\n# Check if any wallpaper files were found\nif [ -n \"$wallpaper\" ]; then\n    # Command to preload and set the wallpaper\n    cmd=\"hyprctl hyprpaper preload \\\"$wallpaper\\\" \u0026\u0026 hyprctl hyprpaper wallpaper \\\"$wallpaper\\\"\"\n    \n    # Launch Kitty terminal with the command\n    kitty -e bash -c \"$cmd; exec bash\"\nelse\n    # Feedback if no wallpapers were found\n    echo \"No wallpaper files found.\"\nfi\n","recorded":"2024-10-27 20:20:27.556122740","filePath":"null","pinned":false},{"value":"wallpaper=$(find / -type f \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.bmp\" -o -iname \"*.tiff\" -o -iname \"\u003e\n[ -n \"$wallpaper\" ] \u0026\u0026 hyprctl hyprpaper preload $wallpaper \u0026\u0026 hyprctl hyprpaper wallpaper ,$wallpaper","recorded":"2024-10-27 20:11:37.654629739","filePath":"null","pinned":false},{"value":"find /base/directory -type d | fzf --multi --preview 'ls -1 {}' | xargs -I {} find \"{}\" -type f \\( -iname \"*.jpg\" -o -iname \"*.png\" -o -iname \"*.jpeg\" -o -iname \"*.gif\" \\)\n","recorded":"2024-10-27 20:09:02.824608721","filePath":"null","pinned":false},{"value":"find /path/to/directory -type f \\( -iname \"*.jpg\" -o -iname \"*.png\" -o -iname \"*.jpeg\" -o -iname \"*.gif\" \\) | fzf --multi --preview=\"kitty +kitten icat --silent --transfer-mode=stream {}\"\n","recorded":"2024-10-27 20:04:54.242680658","filePath":"null","pinned":false},{"value":"find / -type f \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.bmp\" -o -iname \"*.tiff\" -o -iname \"*.webp\" \\) 2\u003e/dev/null | fzf\n","recorded":"2024-10-27 19:02:17.299462155","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALLPAPER_DIR=\"$HOME/Pictures/Wallpapers\"\n\n# Check if directory exists\nif [[ ! -d \"$WALLPAPER_DIR\" ]]; then\n  echo \"Wallpaper directory does not exist.\"\n  exit 1\nfi\n\n# Use WoFi to select a wallpaper\nSELECTED_WALLPAPER=$(find \"$WALLPAPER_DIR\" -type f \\( -iname \"*.jpg\" -o -iname \"*.png\" \\) | wofi --show dmenu --prompt \"Select Wallpaper\")\n\n# If no wallpaper was selected, exit\nif [[ -z \"$SELECTED_WALLPAPER\" ]]; then\n  exit 0\nfi\n\n# Preview the selected wallpaper in Kitty\nkitty +kitten icat --clear # Clear any previous preview\nkitty +kitten icat \"$SELECTED_WALLPAPER\"\n\n# Prompt to confirm setting the wallpaper\nread -p \"Press Enter to set this as the wallpaper, or Ctrl+C to cancel...\"\n\n# Set wallpaper using Hyprland command\nhyprctl hyprpaper wallpaper \"eDP-1,$SELECTED_WALLPAPER\"\n\n# Clear the preview after setting the wallpaper\nkitty +kitten icat --clear\necho \"Wallpaper set to $SELECTED_WALLPAPER\"\n","recorded":"2024-10-27 10:39:54.316587009","filePath":"null","pinned":false},{"value":"  GNU nano 8.2                                                            etho                                                             Modified  \n[Match]\n\n[Network]\nDHCP=yes\n\n","recorded":"2024-10-27 09:45:41.487765881","filePath":"null","pinned":false},{"value":"[Match]\nName=enp0s25\n\n[Network]\nDHCP=yes\n\n","recorded":"2024-10-27 09:45:35.501483104","filePath":"null","pinned":false},{"value":"/usr/share/hypr/wall0.png","recorded":"2024-10-26 21:11:08.676047991","filePath":"null","pinned":false},{"value":"--choosefile=OUTFILE","recorded":"2024-10-26 13:26:54.282121038","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing images\nIMAGE_DIR=\"$HOME/Downloads\"  # Change this to your images directory\n\n# Function to set wallpaper\nset_wallpaper() {\n    local img=\"$1\"\n    swww img \"$img\"\n    echo \"Wallpaper set to: $img\"\n}\n\n# Use fzf to select an image\nselected_image=$(printf \"%s\\n\" \"$IMAGE_DIR\"/*.{jpg,jpeg,png,gif} | fzf --preview \"kitty +kitten icat {}\")\n\n# Check if an image was selected\nif [[ -n \"$selected_image\" ]]; then\n\tkitty --class clipse bash -c \"\n    # Set the wallpaper\n    set_wallpaper \"$selected_image\" \n\n\"\nelse\n    echo \"No image selected.\"\nfi\n","recorded":"2024-10-26 12:59:50.184333691","filePath":"null","pinned":false},{"value":"#!/bin/bash\n\n# Directory containing wallpapers\nWALLPAPER_DIR=\"$HOME/Downloads\"\n\n# List images and open WoFi\nSELECTED_IMAGE=$(find \"$WALLPAPER_DIR\" -type f \\( -name \"*.jpg\" -o -name \"*.png\" -o -name \"*.jpeg\" \\) | wofi --dmenu --prompt \"Select Wallpaper\")\n\n# Check if an image was selected\nif [ -n \"$SELECTED_IMAGE\" ]; then\n    # Open a new Kitty window with the image preview and confirmation\n    kitty --class clipse bash -c \"\n        # Display the selected image in Kitty\n        kitty +kitten icat '$SELECTED_IMAGE';\n        \n        # Prompt for confirmation to set wallpaper\n        read -p 'Set this wallpaper? (y/n): ' confirm;\n        \n        # Check confirmation and set wallpaper\n        if [[ \\$confirm == 'y' ]]; then\n            swww img '$SELECTED_IMAGE';\n            echo 'Wallpaper set!'\n        else\n            echo 'Wallpaper selection cancelled.'\n        fi\n\n        # Clear the image preview from Kitty\n        kitty +kitten icat --clear\n    \"\nelse\n    echo \"No wallpaper selected.\"\nfi\n","recorded":"2024-10-26 12:57:03.312777474","filePath":"null","pinned":false},{"value":"find . -type f \\( -iname \"*.jpg\" -o -iname \"*.jpeg\" -o -iname \"*.png\" -o -iname \"*.gif\" -o -iname \"*.bmp\" -o -iname \"*.svg\" \\) 2\u003e/dev/null | fzf --preview='kitty +kitten icat {}' --preview-window=right:60%\n","recorded":"2024-10-26 10:55:03.932343346","filePath":"null","pinned":false},{"value":"unknown option: --glob=*.{jpg,jpeg,png,gif,bmp,svg}","recorded":"2024-10-26 10:54:40.331317681","filePath":"null","pinned":false},{"value":"fzf --preview='kitty +kitten icat {}' --preview-window=right:60% --glob='*.{jpg,jpeg,png,gif,bmp,svg}'\n","recorded":"2024-10-26 10:54:03.608851337","filePath":"null","pinned":false},{"value":"fzf --preview='feh --auto-zoom --scale-down {}' --preview-window=right:60% --glob='*.{jpg,jpeg,png,gif,bmp,svg}'\n","recorded":"2024-10-26 10:53:12.117820174","filePath":"null","pinned":false}]}