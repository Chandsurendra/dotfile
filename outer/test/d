import tkinter as tk
from tkinter import filedialog
from PIL import Image, ImageTk

class ImageSelectorApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Image Selector")
        
        self.image_listbox = tk.Listbox(master, selectmode=tk.SINGLE)
        self.image_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

        self.preview_label = tk.Label(master)
        self.preview_label.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True)

        self.load_button = tk.Button(master, text="Load Images", command=self.load_images)
        self.load_button.pack(side=tk.BOTTOM)

        self.image_listbox.bind('<<ListboxSelect>>', self.show_image)

    def load_images(self):
        file_paths = filedialog.askopenfilenames(title="Select Images")
        for path in file_paths:
            self.image_listbox.insert(tk.END, path)

    def show_image(self, event):
        selected_index = self.image_listbox.curselection()
        if selected_index:
            image_path = self.image_listbox.get(selected_index)
            img = Image.open(image_path)
            img.thumbnail((300, 300))  # Resize for preview
            img_tk = ImageTk.PhotoImage(img)
            self.preview_label.config(image=img_tk)
            self.preview_label.image = img_tk  # Keep a reference to avoid garbage collection

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageSelectorApp(root)
    root.mainloop()
